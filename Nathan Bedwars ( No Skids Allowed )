local GbXRayHubWatermark = Instance.new("ScreenGui") 
 local TextLabel = Instance.new("TextButton") 
 local UIGradient = Instance.new("UIGradient") 
 local TextLabel_2 = Instance.new("TextLabel") 
 local UIGradient_2 = Instance.new("UIGradient") 
 local UITextSizeConstraint = Instance.new("UITextSizeConstraint") 
 local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint") 
  
 GbXRayHubWatermark.Name = "GbXRayHubWatermark" 
 GbXRayHubWatermark.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui") 
 GbXRayHubWatermark.ZIndexBehavior = Enum.ZIndexBehavior.Sibling 
 GbXRayHubWatermark.ResetOnSpawn = false 
  
 TextLabel.Parent = GbXRayHubWatermark 
 TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 TextLabel.BackgroundTransparency = 1.000 
 TextLabel.BorderSizePixel = 0 
 TextLabel.Position = UDim2.new(-0.000772226602, 0, 0.0343558267, 0) 
 TextLabel.Size = UDim2.new(0.170134634, 0, 0.0700389072, 0) 
 TextLabel.Font = Enum.Font.GothamBold 
 TextLabel.Text = "Gamebreaker" 
 TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255) 
 TextLabel.TextScaled = true 
 TextLabel.TextSize = 28.000 
 TextLabel.TextWrapped = true 
 TextLabel.TextXAlignment = Enum.TextXAlignment.Left 
 TextLabel.MouseButton1Down:Connect(function() 
    game:GetService("VirtualInputManager"):SendKeyEvent(true,Enum.KeyCode.R,false,game) -- Press E key.
 end) 
  
 UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(20, 3, 3)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(20, 0, 0))} 
 UIGradient.Parent = TextLabel 
  
 TextLabel_2.Parent = TextLabel 
 TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255) 
 TextLabel_2.BackgroundTransparency = 1.000 
 TextLabel_2.BorderSizePixel = 0 
 TextLabel_2.Position = UDim2.new(-0.000772226602, 0, 0.67410934, 0) 
 TextLabel_2.Size = UDim2.new(1, 0, 1, 0) 
 TextLabel_2.Font = Enum.Font.GothamBold 
 TextLabel_2.Text = "V1.4" 
 TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255) 
 TextLabel_2.TextScaled = true 
 TextLabel_2.TextSize = 24.000 
 TextLabel_2.TextWrapped = true 
 TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left 
  
 UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(20, 3, 3)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(20, 0, 0))} 
 UIGradient_2.Parent = TextLabel_2 
  
 UITextSizeConstraint.Parent = TextLabel_2 
 UITextSizeConstraint.MaxTextSize = 24 
  
 UITextSizeConstraint_2.Parent = TextLabel 
 UITextSizeConstraint_2.MaxTextSize = 27 
  
 local players = game:GetService("Players") 
 local lplr = players.LocalPlayer 
 local oldchar = lplr.Character 
 local cam = workspace.CurrentCamera 
 local uis = game:GetService("UserInputService") 
 local KnitClient = debug.getupvalue(require(game.Players.LocalPlayer.PlayerScripts.TS.knit).setup, 6) 
 local Client = require(game:GetService("ReplicatedStorage").TS.remotes).default.Client 
 local InventoryUtil = require(game:GetService("ReplicatedStorage").TS.inventory["inventory-util"]).InventoryUtil 
 local itemstuff = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.item["item-meta"]).getItemMeta, 1) 
 local RenderStepTable = {} 
 local StepTable = {} 
 local connectioninfjump 
 local killauraswing = {["Enabled"] = true} 
 local killaurasound = {["Enabled"] = true} 
 local killaurahitdelay = {["Value"] = 2} 
 local killaurasoundval = {["Value"] = 1} 
 local speedval = {["Value"] = 1} 
 local testtogttt = {["Value"] = 20} 
 local ACC1 
 local ACC2 
 local antivoidtransparent = {["Value"] = 50} 
 local antivoidcolor = {["Hue"] = 0.93, ["Sat"] = 1, ["Value"] = 1} 
 local reachval = {["Value"] = 18} 
 local autoclick = {["Enabled"] = true} 
 local origC0 = game.ReplicatedStorage.Assets.Viewmodel.RightHand.RightWrist.C0 
 local killaurafirstpersonanim = {["Value"] = true} 
 local killauraanimval = {["Value"] = "Cool"} 
  
 local SprintCont = KnitClient.Controllers.SprintController 
 local SwordCont = KnitClient.Controllers.SwordController 
 local KnockbackTable = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1) 
 local ClientHandler = Client 
  
 local function GetURL(scripturl) 
         return game:HttpGet("https://raw.githubusercontent.com/7GrandLittleBrother/SytroNight4ROBLOX/main/"..scripturl, true) 
 end 
  
 local function isAlive(plr) 
         if plr then 
                 return plr and plr.Character and plr.Character.Parent ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Head") and plr.Character:FindFirstChild("Humanoid") 
         end 
         return lplr and lplr.Character and lplr.Character.Parent ~= nil and lplr.Character:FindFirstChild("HumanoidRootPart") and lplr.Character:FindFirstChild("Head") and lplr.Character:FindFirstChild("Humanoid") 
 end 
  
 local function runcode(func) 
         func() 
 end 
  
 local function playsound(id, volume)  
         local sound = Instance.new("Sound") 
         sound.Parent = workspace 
         sound.SoundId = id 
         sound.PlayOnRemove = true  
         if volume then  
                 sound.Volume = volume 
         end 
         sound:Destroy() 
 end 
  
 local function playanimation(id)  
         if isAlive() then  
                 local animation = Instance.new("Animation") 
                 animation.AnimationId = id 
                 local animatior = lplr.Character.Humanoid.Animator 
                 animatior:LoadAnimation(animation):Play() 
         end 
 end 
  
 function isNumber(str) 
         if tonumber(str) ~= nil or str == 'inf' then 
                 return true 
         end 
 end 
  
 function getinv(plr) 
         local plr = plr or lplr 
         local thingy, thingytwo = pcall(function() return InventoryUtil.getInventory(plr) end) 
         return (thingy and thingytwo or { 
                 items = {}, 
                 armor = {}, 
                 hand = nil 
         }) 
 end 
  
 function getsword() 
         local sd 
         local higherdamage 
         local swordslots 
         local swords = getinv().items 
         for i, v in pairs(swords) do 
                 if v.itemType:lower():find("sword") or v.itemType:lower():find("blade") then 
                         if higherdamage == nil or itemstuff[v.itemType].sword.damage > higherdamage then 
                                 sd = v 
                                 higherdamage = itemstuff[v.itemType].sword.damage 
                                 swordslots = i 
                         end 
                 end 
         end 
         return sd, swordslots 
 end 
  
 local function getremote(tab) 
         for i,v in pairs(tab) do 
                 if v == "Client" then 
                         return tab[i + 1] 
                 end 
         end 
         return "" 
 end 
  
 local function hvFunc(cock) 
         return {hashedval = cock} 
 end 
  
 local function targetCheck(plr, check) 
         return (check and plr.Character.Humanoid.Health > 0 and plr.Character:FindFirstChild("ForceField") == nil or check == false) 
 end 
  
 local function isPlayerTargetable(plr, target) 
         return plr ~= lplr and plr and isAlive(plr) and targetCheck(plr, target) 
 end 
  
 local function GetAllNearestHumanoidToPosition(distance, amount) 
         local returnedplayer = {} 
         local currentamount = 0 
         if entity.isAlive then -- alive check 
                 for i, v in pairs(game.Players:GetChildren()) do -- loop through players 
                         if isPlayerTargetable((v), true, true, v.Character ~= nil) and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Head") and currentamount < amount then -- checks 
                                 local mag = (lplr.Character.HumanoidRootPart.Position - v.Character:FindFirstChild("HumanoidRootPart").Position).magnitude 
                                 if mag <= distance then -- mag check 
                                         table.insert(returnedplayer, v) 
                                         currentamount = currentamount + 1 
                                 end 
                         end 
                 end 
                 for i2,v2 in pairs(game:GetService("CollectionService"):GetTagged("Monster")) do -- monsters 
                         if v2:FindFirstChild("HumanoidRootPart") and currentamount < amount and v2.Name ~= "Duck" then -- no duck 
                                 local mag =  
 (lplr.Character.HumanoidRootPart.Position - v.Character:FindFirstChild("HumanoidRootPart").Position).magnitude 
                                 if mag <= distance then -- mag check 
                                         table.insert(returnedplayer, v) 
                                         currentamount = currentamount + 1 
                                 end 
                         end 
                 end 
                 for i2,v2 in pairs(game:GetService("CollectionService"):GetTagged("Monster")) do -- monsters 
                         if v2:FindFirstChild("HumanoidRootPart") and currentamount < amount and v2.Name ~= "Duck" then -- no duck 
                                 local mag = (lplr.Character.HumanoidRootPart.Position - v2.HumanoidRootPart.Position).magnitude 
                                 if mag <= distance then -- magcheck 
                                         table.insert(returnedplayer, {Name = (v2 and v2.Name or "Monster"), UserId = 1443379645, Character = v2}) -- monsters are npcs so I have to create a fake player for target info 
                                         currentamount = currentamount + 1 
                                 end 
                         end 
                 end 
         end 
         return returnedplayer -- table of attackable entities 
 end 
  
 local function BindToRenderStep(name, num, func) 
         if RenderStepTable[name] == nil then 
                 RenderStepTable[name] = game:GetService("RunService").RenderStepped:connect(func) 
         end 
 end 
 local function UnbindFromRenderStep(name) 
         if RenderStepTable[name] then 
                 RenderStepTable[name]:Disconnect() 
                 RenderStepTable[name] = nil 
         end 
 end 
  
 local function BindToStepped(name, num, func) 
         if StepTable[name] == nil then 
                 StepTable[name] = game:GetService("RunService").Stepped:connect(func) 
         end 
 end 
 local function UnbindFromStepped(name) 
         if StepTable[name] then 
                 StepTable[name]:Disconnect() 
                 StepTable[name] = nil 
         end 
 end 
  
 local attackentitycont = Client:Get(getremote(debug.getconstants(getmetatable(KnitClient.Controllers.SwordController)["attackEntity"]))) 
 local rgfejd = false 
 local DistVal = {["Value"] = 18} 
 function KillauraRemote() 
         for i,v in pairs(game.Players:GetChildren()) do 
                 if v.Character and v.Name ~= game.Players.LocalPlayer.Name and v.Character:FindFirstChild("HumanoidRootPart") then 
                         local mag = (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude 
                         if mag <= DistVal["Value"] and v.Team ~= game.Players.LocalPlayer.Team and v.Character:FindFirstChild("Humanoid") then 
                                 if v.Character.Humanoid.Health > 0 then 
                                         rgfejd = true 
                                         local GBW = getsword() 
                                         local selfPosition = lplr.Character.HumanoidRootPart.Position + (DistVal["Value"] > 14 and (lplr.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude > 14 and (CFrame.lookAt(lplr.Character.HumanoidRootPart.Position, v.Character.HumanoidRootPart.Position).lookVector * 4) or Vector3.new(0, 0, 0)) 
                                         local Entity = v.Character 
                                         local target = v.Character:GetPrimaryPartCFrame().Position 
                                         attackentitycont:CallServer({ 
                                                 ["chargedAttack"] = {["chargeRatio"] = 1}, 
                                                 ["weapon"] = GBW ~= nil and GBW.tool, 
                                                 ["entityInstance"] = Entity, 
                                                 ["validate"] = {["targetPosition"] = {["value"] = target, 
                                                         ["hash"] = hvFunc(target)}, 
                                                 ["raycast"] = { 
                                                         ["cameraPosition"] = hvFunc(cam.CFrame.Position),  
                                                         ["cursorDirection"] = hvFunc(Ray.new(cam.CFrame.Position, v.Character:GetPrimaryPartCFrame().Position).Unit.Direction) 
                                                 }, 
                                                 ["selfPosition"] = {["value"] = selfPosition, 
                                                         ["hash"] = hvFunc(selfPosition) 
                                                 } 
                                                 } 
                                         }) 
                                         if killaurasound["Enabled"] then 
                                                 playsound("rbxassetid://6760544639", killaurasoundval["Value"]) 
                                         end 
                                         if killauraswing["Enabled"] then 
                                                 playanimation("rbxassetid://4947108314") 
                                         end 
                                 end 
                         else 
                                 rgfejd = false 
                         end 
                 end 
         end 
 end 
  
 local itemtab = debug.getupvalue(require(game:GetService("ReplicatedStorage").TS.item["item-meta"]).getItemMeta, 1) 
 local CombatConstant = require(game:GetService("ReplicatedStorage").TS.combat["combat-constant"]).CombatConstant 
 local function getEquipped() 
         local typetext = "" 
         local obj = (entity.isAlive and lplr.Character:FindFirstChild("HandInvItem") and lplr.Character.HandInvItem.Value or nil) 
         if obj then 
                 if obj.Name:find("sword") or obj.Name:find("blade") or obj.Name:find("baguette") or obj.Name:find("scythe") or obj.Name:find("dao") then 
                         typetext = "sword" 
                 end 
                 if obj.Name:find("wool") or itemtab[obj.Name]["block"] then 
                         typetext = "block" 
                 end 
                 if obj.Name:find("bow") then 
                         typetext = "bow" 
                 end 
         end 
         return {["Object"] = obj, ["Type"] = typetext} 
 end 
  
  
 function getbeds() 
         local beds = {} 
         local blocks = game:GetService("Workspace").Map.Blocks 
         for _,Block in pairs(blocks:GetChildren()) do 
                 if Block.Name == "bed" and Block.Covers.BrickColor ~= game.Players.LocalPlayer.Team.TeamColor then 
                         table.insert(beds,Block) 
                 end 
         end 
         return beds 
 end 
  
 function getbedsblocks() 
         local blockstb = {} 
         local blocks = game:GetService("Workspace").Map.Blocks 
         for i,v in pairs(blocks:GetChildren()) do 
                 if v:IsA("Part") then 
                         table.insert(blockstb,v) 
                 end 
         end 
         return blockstb 
 end 
  
 function blocks(bed) 
         local aboveblocks = 0 
         local Blocks = getbedsblocks() 
         for _,Block in pairs(Blocks) do 
                 if Block.Position.X == bed.X and Block.Position.Z == bed.Z and Block.Name ~= "bed" and (Block.Position.Y - bed.Y) <= 9 and Block.Position.Y > bed.Y then 
                         aboveblocks = aboveblocks + 1 
                 end 
         end 
         return aboveblocks 
 end 
  
 function nuker() 
         local beds = getbeds() 
         for _,bed in pairs(beds) do 
                 local bedmagnitude = (bed.Position - game.Players.LocalPlayer.Character.PrimaryPart.Position).Magnitude 
                 if bedmagnitude < 27 then 
                         local upnum = blocks(bed.Position) 
                         local x = math.round(bed.Position.X/3) 
                         local y = math.round(bed.Position.Y/3) + upnum 
                         local z = math.round(bed.Position.Z/3) 
                         game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged.DamageBlock:InvokeServer({ 
                                 ["blockRef"] = { 
                                         ["blockPosition"] = Vector3.new(x,y,z) 
                                 }, 
                                 ["hitPosition"] = Vector3.new(x,y,z), 
                                 ["hitNormal"] = Vector3.new(x,y,z), 
                         }) 
                 end 
         end 
 end 
  
  
  
  
  
  
  
  
  
  
 local Gb = loadstring(game:HttpGet("https://raw.githubusercontent.com/vqfx/SytroNight4ROBLOX/main/libraries/kavo.lua"))()  
 local Window = Gb.CreateLib("Gamebreaker | Bedwars⚡ | V1.4", "Serpent") 
  
 local colors = {
    SchemeColor = Color3.fromRGB(0,255,255),
    Background = Color3.fromRGB(0, 0, 0),
    Header = Color3.fromRGB(0, 0, 0),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}
  
 local colorbox 
 local function makeRainbowText(text) 
         spawn(function() 
                 colorbox = Color3.fromRGB(170,0,170) 
                 local x = 0 
                 while wait() do 
                         colorbox = Color3.fromHSV(x,1,1) 
                         x = x + 4.5/255 
                         if x >= 1 then 
                                 x = 0 
                         end 
                 end 
         end) 
         spawn(function() 
                 repeat 
                         wait() 
                         text.TextColor3 = colorbox 
                 until true == false 
         end) 
 end 
 -- Tab 
  
 local Tab1 = Window:NewTab("Main") 
 local Tab1Section = Tab1:NewSection("Main Script's") 
 local Tab2 = Window:NewTab("Other Scripts") 
 local Tab2Section = Tab2:NewSection("Other Scripts") 
 local Tab4 = Window:NewTab("Animation") 
 local Tab4Section = Tab4 :NewSection("Filtering Enabled ( FE )") 
 local Misc = Window:NewTab("Misc") 
 local MiscSection = Misc:NewSection("Misc") 
 local Tab5 = Window:NewTab("Credits") 
 local Credits = Tab5:NewSection("Credits") 
 local Tab6 = Window:NewTab("UI Settings") 
 local Tab6Section = Tab6:NewSection("Toggle UI")
 local Tab7 = Window:NewTab("World Misc") 
 local Void = Tab7:NewSection("Anti-Void") 
 local Tab8 = Window:NewTab("Player Misc") 
 local Spider = Tab8:NewSection("Spider") 
 local Update = Window:NewTab("Update Log's") 
 local SectionUpdate = Update:NewSection("Latest Update 7/8/22") 
 local Tab9 = Window:NewTab("Troll") 
 local Tab9section = Tab9:NewSection("Once you turn it on you cant turn it off") 
  
 --Scripts 
  
 Credits:NewLabel("UI: Kavo Library") 
 Credits:NewLabel("Dark Hub: Infinite Jump") 
 Credits:NewLabel("Gamebreaker: Anti-Knockback") 
 Credits:NewLabel("Gamebreaker: Speed") 
 Credits:NewLabel("Moerii: Kill-Aura") 
 Credits:NewLabel("Moerii: Bednuker ( Still Not Fixed Lol )") 
 Credits:NewLabel("SVamp: Spider") 
 Credits:NewLabel("JN HH: Animation's") 
 Credits:NewLabel("Gamebreaker and Dark Hub: Anti-Void") 
 Credits:NewLabel("Special thanks to FelipeAce: For Suggesting Anti-Void") 
 Credits:NewLabel("Special thanks to SVamp: For Letting me use his ( other ) codes") 
  
 SectionUpdate:NewLabel("We Added") 
 SectionUpdate:NewLabel("Spider ( Player Misc )") 
 SectionUpdate:NewLabel("Toggle UI Using Keybind ( UI Settings )") 
 SectionUpdate:NewLabel("Fully Customizable Theme ( UI Settings )") 
 SectionUpdate:NewLabel("Full Bright ( Misc Section )") 
 SectionUpdate:NewLabel("Damage Return ( Main Section )") 
 SectionUpdate:NewLabel("Theme Updated!") 
 SectionUpdate:NewLabel("Old Theme : Dark") 
 SectionUpdate:NewLabel("New Theme : Serpent") 
 SectionUpdate:NewLabel("Next Update Were Gonna Add") 
 SectionUpdate:NewLabel("Auto-Report") 
 SectionUpdate:NewLabel("Auto-BedDefense") 
 SectionUpdate:NewLabel("Auto-Bridge Using Keybind") 
 SectionUpdate:NewLabel("Use Keyboard Script In Misc Section!") 
  
  
 Tab1Section:NewToggle("Speed", "", function(state) 
         if state then 
                 BindToStepped("CFrameWalkSpeed", 1, function(time, delta) 
                         if entity.isAlive then 
                                 local newpos = (lplr.Character.Humanoid.MoveDirection  * (speedval["Value"] - lplr.Character.Humanoid.WalkSpeed)) * delta 
  
                                 local raycastparameters = RaycastParams.new() 
                                 raycastparameters.FilterDescendantsInstances = {lplr.Character} 
                                 local ray = workspace:Raycast(lplr.Character.HumanoidRootPart.Position, newpos, raycastparameters) 
                                 if ray then newpos = (ray.Position - lplr.Character.HumanoidRootPart.Position) end 
                                 lplr.Character.HumanoidRootPart.CFrame = lplr.Character.HumanoidRootPart.CFrame + newpos 
                         end 
                 end) 
         else 
                 UnbindFromStepped("CFrameWalkSpeed") 
         end 
 end) 
  
 Tab1Section:NewSlider("Adjust Speed 1-27", "Adjust CFrame speed", 27, 1, function(s) 
         speedval["Value"] = s 
 end) 
  
 Void:NewToggle("Anti-Void", "Give's you a second chance to get back on land", function(state)  
          if state then  
                  antivoidp = Instance.new("Part", workspace)  
                  antivoidp.Name = "AntiVoid"  
                  antivoidp.CanCollide = true  
                  antivoidp.Size = Vector3.new(2048, 1, 2048)  
                  antivoidp.Anchored = true  
                  antivoidp.Transparency = 1 - (antivoidtransparent["Value"] / 100)  
                  antivoidp.Material = Enum.Material.Neon  
                  antivoidp.Color = Color3.fromHSV(antivoidcolor["Hue"], antivoidcolor["Sat"], antivoidcolor["Value"])  
                  antivoidp.Position = Vector3.new(0, 23.5, 0)  
                  antivoidp.Touched:connect(function(touchedvoid)  
                          if touchedvoid.Parent:FindFirstChild("Humanoid") and touchedvoid.Parent.Name == lplr.Name then  
                                  lplr.Character.Humanoid.Jump = true  
                                  lplr.Character.Humanoid:ChangeState("Jumping")  
                                  wait(0.2)  
                                  lplr.Character.Humanoid:ChangeState("Jumping")  
                                  wait(0.2)  
                                  lplr.Character.Humanoid:ChangeState("Jumping")  
                          end  
                  end)  
          else  
                  if antivoidp then  
                          antivoidp:Remove()  
                  end  
          end  
  end)  
    
  Void:NewColorPicker("Anti-Void Color", "Adjust antivoid color", Color3.fromHSV(antivoidcolor["Hue"], antivoidcolor["Sat"], antivoidcolor["Value"]), function(val)  
          if antivoidp then  
                  antivoidp.Color = (val)  
          end  
  end) 
   
  Void:NewSlider("Void Color Transparency", "Adjust antivoid transparency", 100, 0, function(val)  
          if antivoidp then  
                  antivoidp.Transparency = 1 - (val / 100)  
          end  
  end)  
   
  Tab1Section:NewToggle("Auto-Sprint", "Automatically on your sprint", function(state)  
          if state then  
                  BindToStepped("Sprint", 1, function()  
                          if SprintCont.sprinting == false then  
                                  SprintCont:startSprinting()  
                          end  
                  end)  
          else  
                  UnbindFromStepped("Sprint")  
                  SprintCont:stopSprinting()  
          end  
  end)   
  
 Tab1Section:NewToggle("Anti-Knockback", "Prevents taking a knockback", function(state)  
          if state then  
                  KnockbackTable["kbDirectionStrength"] = 0  
                  KnockbackTable["kbUpwardStrength"] = 0  
          else  
                  KnockbackTable["kbDirectionStrength"] = 100  
                  KnockbackTable["kbUpwardStrength"] = 100  
          end  
  end)  
  
 Tab1Section:NewToggle("KillAura", "Autoswing the sword if someone is near you", function(state) 
         if state then 
                 BindToStepped("Killaura", 1, function() 
                         if entity.isAlive then 
                                 KillauraRemote() 
                         end 
                 end) 
         else 
                 UnbindFromStepped("Killaura") 
         end 
 end) 
  
 Tab1Section:NewSlider("Distance 1-40", "Increase killaura distance", 40, 1, function(val) 
         DistVal["Value"] = val 
 end) 
  
  
  
 Tab1Section:NewToggle("Disable KillAura Swing", "Disable killaura swing", function(state) 
         if state then 
                 if killauraswing["Enabled"] == true then 
                         killauraswing["Enabled"] = false 
                 end 
         else 
                 if killauraswing["Enabled"] == false then 
                         killauraswing["Enabled"] = true 
                 end 
         end 
 end) 
  
 Tab1Section:NewSlider("Sound 1-0", "Adjust killaura sound", 1, 0, function(val) 
         killaurasoundval["Value"] = val 
 end) 
          
 Tab1Section:NewToggle("Reach", "Extend your attack range", function(state)  
          if state then  
                  CombatConstant.RAYCAST_SWORD_CHARACTER_DISTANCE = (reachval["Value"] - 0.0001)  
          else  
                  CombatConstant.RAYCAST_SWORD_CHARACTER_DISTANCE = 14.4  
          end  
  end)  
    
 Tab1Section:NewSlider("Range 1-50", "", 50, 1, function(val) -- 500 (MaxValue) | 0 (MinValue)  
          reachval["Value"] = val  
  end) 
  
 Tab1Section:NewToggle("Damage Return", "Return Damage From Player", function(state)
    if state then
        
local TS = game:GetService("TweenService")
local Tinfo = TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.InOut)

local DamageEvent = game.ReplicatedStorage.DamageEvent --You can remove this line since it is actually unnecessary 
local DamageBoard = game.ReplicatedStorage.DamageBoard

local Red = Color3.fromRGB(255, 0, 0)
local Green = Color3.fromRGB(95,111,64)



game.Players.PlayerAdded:Connect(function(plr)
	plr.CharacterAdded:Connect(function(char)
		
		local hum = char:WaitForChild("Humanoid")
		local humH = hum.Health
		
		hum.HealthChanged:Connect(function(Health)
			if Health < humH and Health > 0 then
				
				local Damage = math.floor(humH - Health)
				print(Damage.." Damage was taken")
				
				local BoardClone = DamageBoard:Clone()
				BoardClone:FindFirstChild("Damage").Text = Damage
				
				local maxH = hum.MaxHealth
				BoardClone.Damage.TextColor3 = Green:lerp(Red, Damage / maxH)
				
				
				BoardClone.Parent = char.HumanoidRootPart
				BoardClone.Damage:TweenSize(UDim2.new(1,0,1,0), "InOut", "Quint", 0.3)
								
				wait(0.3)
				
				local UIupTween = TS:Create(BoardClone, Tinfo, {StudsOffset = BoardClone.StudsOffset + Vector3.new(0,1,0)})
				local textFade = TS:Create(BoardClone.Damage, Tinfo, {TextTransparency = 1})
								
				UIupTween:Play()
				textFade:Play()
				
				game:GetService("Debris"):AddItem(BoardClone, 0.5)
			end
			humH = hum.Health
		end)
		
	end)
end)
    else
        print("Toggle Off")
    end
end)
 
  
  
 Tab1Section:NewToggle("No Fall Damage", "Opens No Fall Damage", function(callback) 
     local nofall = true 
     if callback then 
         if nofall then 
             spawn(function() 
                 repeat 
                     wait() 
                     if nofall == false then 
                         return end 
  
                         game:GetService("ReplicatedStorage").rbxts_include.node_modules.net.out._NetManaged.GroundHit:FireServer() 
                     until nofall == false 
                 end) 
             end 
     else 
         local nofall = false 
     end 
 end) 
  
 Tab1Section:NewToggle("ESP", "ToggleInfo", function(state) 
     if state then 
         local lplr = game.Players.LocalPlayer 
 local camera = game:GetService("Workspace").CurrentCamera 
 local CurrentCamera = workspace.CurrentCamera 
 local worldToViewportPoint = CurrentCamera.worldToViewportPoint 
  
 local HeadOff = Vector3.new(0, 0.5, 0) 
 local LegOff = Vector3.new(0,3,0) 
  
 for i,v in pairs(game.Players:GetChildren()) do 
     local BoxOutline = Drawing.new("Square") 
     BoxOutline.Visible = false 
     BoxOutline.Color = Color3.new(0,0,0) 
     BoxOutline.Thickness = 3 
     BoxOutline.Transparency = 1 
     BoxOutline.Filled = false 
  
     local Box = Drawing.new("Square") 
     Box.Visible = false 
     Box.Color = Color3.new(1,1,1) 
     Box.Thickness = 1 
     Box.Transparency = 1 
     Box.Filled = false 
  
     local HealthBarOutline = Drawing.new("Square") 
     HealthBarOutline.Thickness = 3 
     HealthBarOutline.Filled = false 
     HealthBarOutline.Color = Color3.new(0,0,0) 
     HealthBarOutline.Transparency = 1 
     HealthBarOutline.Visible = false 
  
     local HealthBar = Drawing.new("Square") 
     HealthBar.Thickness = 1 
     HealthBar.Filled = false 
     HealthBar.Transparency = 1 
     HealthBar.Visible = false 
  
     function boxesp() 
         game:GetService("RunService").RenderStepped:Connect(function() 
             if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then 
                 local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position) 
  
                 local RootPart = v.Character.HumanoidRootPart 
                 local Head = v.Character.Head 
                 local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position) 
                 local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff) 
                 local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff) 
  
                 if onScreen then 
                     BoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y) 
                     BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2) 
                     BoxOutline.Visible = true 
  
                     Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y) 
                     Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2) 
                     Box.Visible = true 
  
                     HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y) 
                     HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0) 
                     HealthBarOutline.Visible = true 
  
                     HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value, 0, game:GetService("Players")[v.Character.Name].NRPBS:WaitForChild("MaxHealth").Value))) 
                     HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1 / HealthBar.Size.Y)) 
                     HealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 0) 
                     HealthBar.Visible = true 
  
                     if v.TeamColor == lplr.TeamColor then 
                         --- Our Team 
                         BoxOutline.Visible = false 
                         Box.Visible = false 
                         HealthBarOutline.Visible = false 
                         HealthBar.Visible = false 
                     else 
                         ---Enemy Team 
                         BoxOutline.Visible = true 
                         Box.Visible = true 
                         HealthBarOutline.Visible = true 
                         HealthBar.Visible = true 
                     end 
  
                 else 
                     BoxOutline.Visible = false 
                     Box.Visible = false 
                     HealthBarOutline.Visible = false 
                     HealthBar.Visible = false 
                 end 
             else 
                 BoxOutline.Visible = false 
                 Box.Visible = false 
                 HealthBarOutline.Visible = false 
                 HealthBar.Visible = false 
             end 
         end) 
     end 
     coroutine.wrap(boxesp)() 
 end 
  
 game.Players.PlayerAdded:Connect(function(v) 
     local BoxOutline = Drawing.new("Square") 
     BoxOutline.Visible = false 
     BoxOutline.Color = Color3.new(0,0,0) 
     BoxOutline.Thickness = 3 
     BoxOutline.Transparency = 1 
     BoxOutline.Filled = false 
  
     local Box = Drawing.new("Square") 
     Box.Visible = false 
     Box.Color = Color3.new(1,1,1) 
     Box.Thickness = 1 
     Box.Transparency = 1 
     Box.Filled = false 
  
     local HealthBarOutline = Drawing.new("Square") 
     HealthBarOutline.Thickness = 3 
     HealthBarOutline.Filled = false 
     HealthBarOutline.Color = Color3.new(0,0,0) 
     HealthBarOutline.Transparency = 1 
     HealthBarOutline.Visible = false 
  
     local HealthBar = Drawing.new("Square") 
     HealthBar.Thickness = 1 
     HealthBar.Filled = false 
     HealthBar.Transparency = 1 
     HealthBar.Visible = false 
  
     function boxesp() 
         game:GetService("RunService").RenderStepped:Connect(function() 
             if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then 
                 local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position) 
  
                 local RootPart = v.Character.HumanoidRootPart 
                 local Head = v.Character.Head 
                 local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position) 
                 local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff) 
                 local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff) 
  
                 if onScreen then 
                     BoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y) 
                     BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2) 
                     BoxOutline.Visible = true 
  
                     Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y) 
                     Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2) 
                     Box.Visible = true 
  
                     HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y) 
                     HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0) 
                     HealthBarOutline.Visible = true 
  
                     HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value, 0, game:GetService("Players")[v.Character.Name].NRPBS:WaitForChild("MaxHealth").Value))) 
                     HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y)) 
                     HealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 0)                     
                     HealthBar.Visible = true 
  
                     if v.TeamColor == lplr.TeamColor then 
                         --- Our Team 
                         BoxOutline.Visible = false 
                         Box.Visible = false 
                         HealthBarOutline.Visible = false 
                         HealthBar.Visible = false 
                     else 
                         ---Enemy Team 
                         BoxOutline.Visible = true 
                         Box.Visible = true 
                         HealthBarOutline.Visible = true 
                         HealthBar.Visible = true 
                     end 
  
                 else 
                     BoxOutline.Visible = false 
                     Box.Visible = false 
                     HealthBarOutline.Visible = false 
                     HealthBar.Visible = false 
                 end 
             else 
                 BoxOutline.Visible = false 
                 Box.Visible = false 
                 HealthBarOutline.Visible = false 
                 HealthBar.Visible = false 
             end 
         end) 
     end 
     coroutine.wrap(boxesp)() 
 end) 
     else 
         print("Toggle Off") 
     end 
 end) 
  
 Tab1Section:NewToggle("Add ESP Lines", "Lines", function(state) 
     if state then 
         local lplr = game.Players.LocalPlayer 
 local camera = game:GetService("Workspace").CurrentCamera 
 local CurrentCamera = workspace.CurrentCamera 
 local worldToViewportPoint = CurrentCamera.worldToViewportPoint 
  
 _G.TeamCheck = false -- Use True or False to toggle TeamCheck 
  
 for i,v in pairs(game.Players:GetChildren()) do 
     local Tracer = Drawing.new("Line") 
     Tracer.Visible = false 
     Tracer.Color = Color3.new(1,1,1) 
     Tracer.Thickness = 1 
     Tracer.Transparency = 1 
  
     function lineesp() 
         game:GetService("RunService").RenderStepped:Connect(function() 
             if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then 
                 local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position) 
  
                 if OnScreen then 
                     Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1) 
                     Tracer.To = Vector2.new(Vector.X, Vector.Y) 
  
                     if _G.TeamCheck and v.TeamColor == lplr.TeamColor then 
                         --//Teammates 
                         Tracer.Visible = false 
                     else 
                         --//Enemies 
                         Tracer.Visible = true 
                     end 
                 else 
                     Tracer.Visible = false 
                 end 
             else 
                 Tracer.Visible = false 
             end 
         end) 
     end 
     coroutine.wrap(lineesp)() 
 end 
  
 game.Players.PlayerAdded:Connect(function(v) 
     local Tracer = Drawing.new("Line") 
     Tracer.Visible = false 
     Tracer.Color = Color3.new(1,1,1) 
     Tracer.Thickness = 1 
     Tracer.Transparency = 1 
  
     function lineesp() 
         game:GetService("RunService").RenderStepped:Connect(function() 
             if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then 
                 local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position) 
  
                 if OnScreen then 
                     Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1) 
                     Tracer.To = Vector2.new(Vector.X, Vector.Y) 
  
                     if _G.TeamCheck and v.TeamColor == lplr.TeamColor then 
                         --//Teammates 
                         Tracer.Visible = false 
                     else 
                         --//Enemies 
                         Tracer.Visible = true 
                     end 
                 else 
                     Tracer.Visible = false 
                 end 
             else 
                 Tracer.Visible = false 
             end 
         end) 
     end 
     coroutine.wrap(lineesp)() 
 end) 
     else 
         print("Toggle Off") 
     end 
 end) 
  
  
 Tab4Section:NewButton("Zombie Animation" , "Plays Zombie Animation",function() 
 loadstring(game:HttpGet("https://pastebin.com/raw/t3yTSPRn",true))() 
 end) 
  
 Tab4Section:NewButton("Ninja Animation","Plays Ninja Animation",function() 
 loadstring(game:HttpGet("https://pastebin.com/raw/bwGLPVV7",true))() 
 end) 
  
 Tab4Section:NewButton("Robot Animation","Plays Robot Animation",function() 
 local Animate = 
 game.Players.LocalPlayer.Character.Animate 
 Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616088211" 
 Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616089559" 
 Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616095330" 
 Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616091570" 
 Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616090535" 
 Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616086039" 
 Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616087089" 
 end) 
  
 Tab4Section:NewButton("Toy Animation","Opens Toy Animation",function() 
 local Animate = 
 game.Players.LocalPlayer.Character.Animate 
 Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498" 
 Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736" 
 Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345" 
 Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708" 
 Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020" 
 Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869" 
 Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423" 
 end) 
 
 Tab4Section:NewButton("Werewolf Animation","Opens Werewolf Animation",function() 
 local Animate = 
 game.Players.LocalPlayer.Character.Animate 
 Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=1083195517"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=1083214717"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=1083178339"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=1083216690"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083182000"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=1083189019"
 end) 
 
 Tab4Section:NewButton("Superhero Animation","Opens Superhero Animation",function() 
 local Animate = 
 game.Players.LocalPlayer.Character.Animate 
 Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616111295"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616113536"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616122287"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616117076"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616115533"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616104706"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616108001"
 end) 
 
 Tab4Section:NewButton("Levitation Animation","Opens Levitation Animation",function() 
 local Animate = 
 game.Players.LocalPlayer.Character.Animate 
 Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=616006778"
Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=616008087"
Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616013216"
Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616010382"
Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616008936"
Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616003713"
Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616005863"
 end) 
  
  
 MiscSection:NewButton("FixCam", "fix camera bug on mobile", function() 
         cam.CameraType = Enum.CameraType.Fixed 
         cam.CameraType = Enum.CameraType.Custom 
 end) 
  
  
 MiscSection:NewButton("Keyboard", "Opens Keyboard", function() 
 loadstring(game:HttpGet("https://pastebin.com/raw/kC3dAMvt"))() 
 end) 
 
 MiscSection:NewButton("Fullbright", "Give's your eye special ability", function(state)
    local Light = game:GetService("Lighting")

function dofullbright()
Light.Ambient = Color3.new(1, 1, 1)
Light.ColorShift_Bottom = Color3.new(1, 1, 1)
Light.ColorShift_Top = Color3.new(1, 1, 1)
end

dofullbright()

Light.LightingChanged:Connect(dofullbright)local Light = game:GetService("Lighting")

function dofullbright()
Light.Ambient = Color3.new(1, 1, 1)
Light.ColorShift_Bottom = Color3.new(1, 1, 1)
Light.ColorShift_Top = Color3.new(1, 1, 1)
end

dofullbright()

Light.LightingChanged:Connect(dofullbright)

end)
  
 Tab6Section:NewKeybind("Toggle UI", "Toggle The UI", Enum.KeyCode.R, function() 
         Gb:ToggleUI() 
 end) 
  
 runcode(function() 
         local wall = nil 
         local spiderspeed = {["Value"] = 0} 
         local Nr = Tab8:NewSection("The Spider will allow you to climb up walls") 
         Spider:NewToggle("Spider", "Allows you to climb up a wall", function(state) 
                 if state then 
                         BindToStepped("Spider", 1, function() 
                                 local raycastparameters = RaycastParams.new() 
                                 raycastparameters.FilterDescendantsInstances = {lplr.Character} 
                                 local ray = workspace:Raycast(lplr.Character.Humanoid.LeftLeg.Position, lplr.Character.HumanoidRootPart.CFrame.LookVector * 1.3, raycastparameters) 
  
                                 wall = ray and ray.Instance or nil 
                                 if wall then 
                                         lplr.Character.HumanoidRootPart.Velocity = Vector3.new(lplr.Character.HumanoidRootPart.Velocity.X or 0, spiderspeed["Value"], lplr.Character.HumanoidRootPart.Velocity.Z or 0) 
  
                                         if lplr.Character.Humanoid:GetState() ~= Enum.HumanoidStateType.Climbing then 
                                                 lplr.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Freefall) 
                                         end 
                                 end 
                         end) 
                 else 
                         UnbindFromStepped("Spider") 
                 end 
         end) 
         Spider:NewSlider("Spider Climb Speed 1-100", "Adjust spider speed", 100, 0, function(val) -- 500 (MaxValue) | 0 (MinValue) 
                 spiderspeed["Value"] = val 
         end) 
 end) 
  
 Spider:NewButton("Infinite Jump", "Activate's Infinite Jump", function() 
     local InfiniteJumpEnabled = true 
     game:GetService("UserInputService").JumpRequest:connect(function() 
             if InfiniteJumpEnabled then 
                     game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping") 
            end 
     end) 
 end) 
  
 Tab9section:NewButton("Annoy Player's", "Activate's Infinite Jump", function() 
     local choosePlayer = false --set true if you want to insult one person only 
 local chosenPlayer = "" --if chosePlayer = true, type playername in quotes 
  
  
  
 local Taunts = { --add as many as you wish 
   "You're bad at the game bro.", 
   "I'm your dad so if you try to talk to me you're stupid.", 
   "I dont talk Nubs Like you.", 
   "Ez.", 
   "kid.", 
   "Shutup.", 
   "SHUTUP NOOB.", 
   "L.", 
   "bozo.", 
   "All you do is the same thing.", 
   "L Bozo.", 
   "I dont talk to noobs.", 
   "Get OUT.", 
   "NuB.", 
   "Eat batteries.", 
   ".. Get Rekt.", 
   "Reported.", 
   "Lol noob", 
   "get RKT.", 
   "Um.", 
   "Lol", 
   "Stop.", 
   "beggar", 
   "Ez Nubie", 
   "lol bozo", 
   "Kid.", 
   "Stop being dumb.", 
   "Why are you talking to me?", 
   "Bozo Crying?", 
   "Get Out from here.", 
   "Get out.", 
   "why are you so bad?", 
   "...................you bad ..................", 
   "I think you're stupid dude it's obvious.", 
   "You're pathetic.", 
   "Why are you responding to my chat?", 
   "LOL", 
   "You're not cool.", 
   "EAT BLEACH CRACKERS NOOB.", 
   "You're kidding me.", 
   "DUMB.", 
   "STUPID.", 
   "Your Mom Under My Bed Sheet.", 
   "I don't bully people.", 
   "I aim to be the most highly targeted person in this server.", 
   "Your messages aren't even being taken into consideration.", 
   "I don't even know what you're saying.", 
   "Dude you are so bad...", 
   "Stop now.", 
   "Go away.", 
   "Why you so bad in this game?", 
   "What's going on?", 
   "You're salty enough to season my food.", 
   "You're wasting time.", 
   "You need to stop.", 
   "Bruh you are so bad.", 
   "Lame.", 
   "Stop playing ROBLOX Because you are bad", 
   "This is hilarious", 
   "Your reaction is exactly what I wanted to happen", 
   "Turn off your computer", 
   "I am smart", 
   "I HAVE YOUR MOM", 
   "Roblox will delete your account tommorow.", 
   "I contacted ROBLOX and told them about you", 
   "I work at ROBLOX i'll be banning you soon.", 
   "Gamebreaker on top!", 
   "The game doesn't matter", 
   "Skills dont matter", 
   "I'll be telling the owner of the game.", 
   "What you're doing isnt gonna work.", 
   "It's not working dude.", 
   "Stop trying.", 
   "I think you need to reconsider your actions.", 
   "Tell your mom to stop dude.", 
   "Why are you talking to your dad bro?.", 
   "Eat your graphics card.", 
   "I bet you bought your pc from walmart.", 
   "Your PC sucks.", 
   "NOOOOOOOOOB.", 
    
 } 
  
 local Remote = game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest 
  
 local function Insult() 
    local players = game.Players:GetChildren() 
    local howManyPlayers = #players 
     
    local ran = math.random(1,howManyPlayers) 
    local chosenOne = players[ran] 
    local chance = math.random(1,20) 
     
    if choosePlayer == true then 
        Remote:FireServer(chosenPlayer.." " ..Taunts[math.random(1,#Taunts)],"All") 
    elseif chance <= 5 then 
        Remote:FireServer(chosenOne.Name.." " ..Taunts[math.random(1,#Taunts)],"All") 
    else 
        Remote:FireServer(Taunts[math.random(1,#Taunts)],"All") 
    end 
 end 
     
 local randTime = math.random(5,15) 
  
 while true and wait(randTime) do 
    Insult() 
 end 
 end)
